{"version":3,"file":"static/js/589.086d7711.chunk.js","mappings":"8SAEMA,EAAU,mCAEHC,EAAoB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,gEACmCF,IAFzB,cAC5BG,EAD4B,yBAI3BA,GAJ2B,2CAAH,qDAOpBC,EAAgB,mCAAG,WAAMC,GAAN,uFACNH,EAAAA,GAAAA,IAAA,4DAC+BF,EAD/B,kBACgDK,IAF1C,cACxBC,EADwB,yBAIvBA,GAJuB,2CAAH,sDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,GAAAA,IAAA,6CACgBM,EADhB,oBAC8BR,IAF1B,cACtBM,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdG,EAAc,mCAAG,WAAMD,GAAN,uFACJN,EAAAA,GAAAA,IAAA,6CACgBM,EADhB,4BACsCR,IAFlC,cACtBM,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMF,GAAN,uFACPN,EAAAA,GAAAA,IAAA,6CACgBM,EADhB,4BACsCR,IAF/B,cACzBM,EADyB,yBAIxBA,GAJwB,2CAAH,qD,0NC7BjBK,EAAgBC,EAAAA,GAAAA,IAAH,0CAIbC,EAAcD,EAAAA,GAAAA,MAAH,+CAIXE,EAAeF,EAAAA,GAAAA,OAAH,8FAOZG,EAAYH,EAAAA,GAAAA,GAAH,6CAITI,EAAaJ,EAAAA,GAAAA,GAAH,8EAMVK,GAAgBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,yI,iKCzBbO,EAA2BP,EAAAA,GAAAA,IAAH,2DAIxBQ,GAAsBR,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,uPAcnBS,EAAuBT,EAAAA,GAAAA,IAAH,6EAIpBU,EAAuBV,EAAAA,GAAAA,IAAH,0CAIpBW,EAAoBX,EAAAA,GAAAA,GAAH,6CAIjBY,EAAsBZ,EAAAA,GAAAA,GAAH,oEAKnBa,EAA6Bb,EAAAA,GAAAA,IAAH,6EAK1Bc,EAAkCd,EAAAA,GAAAA,GAAH,6CAI/Be,EAAkCf,EAAAA,GAAAA,GAAH,8E,SC6C5C,EA5EsB,WAAO,IAAD,IACpBgB,GAASC,EAAAA,EAAAA,MACf,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAMC,EAAAA,EAAAA,QAAOH,GAcnB,OAXAI,EAAAA,EAAAA,YAAU,YACRhC,EAAAA,EAAAA,IAAeqB,EAAOY,SACnBC,MAAK,SAAAtC,GACJ,IAAMuC,EAAYvC,EAAUwC,KAC5BX,EAASU,EACV,IACAE,OAAM,SAAAX,GACLC,EAASD,EAAMY,QAChB,GACJ,GAAE,CAACjB,EAAOY,WAGT,UAACrB,EAAD,YACE,SAACC,EAAD,CAAqB0B,GAAE,oBAAET,EAAIU,QAAQC,aAAd,aAAE,EAAmBC,YAArB,QAA6B,UAApD,sBAGChB,IAAS,+EACTF,IACC,UAACT,EAAD,YACE,UAACD,EAAD,YACE,0BACE,gBACE6B,IAxBM,kCAwBanB,EAAMoB,YACzBC,IAAKrB,EAAMsB,OAAStB,EAAM1B,UAG9B,0BACE,UAACkB,EAAD,YACE,2BACE,wBAAKQ,EAAMsB,OAAStB,EAAM1B,QAC1B,wCAAqC,GAArB0B,EAAMuB,cAAmBC,UAAzC,YAEF,2BACE,sCACA,uBAAIxB,EAAMyB,eAEZ,2BACE,oCACA,SAAChC,EAAD,UACGO,EAAM0B,OAAOC,KAAI,SAAAC,GAChB,OAAO,wBAAoBA,EAAMtD,MAAjBsD,EAAMnD,GACvB,kBAMX,UAACiB,EAAD,YACE,oDACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CAAemB,GAAI,OAAnB,qBAEF,SAACnB,EAAD,WACE,SAAC,KAAD,CAAemB,GAAI,UAAnB,iCAOV,SAAC,EAAAc,SAAD,CAAUC,SAAU,KAApB,UACE,SAAC,KAAD,QAIP,C","sources":["components/API/API.js","components/Movies/Movies.styled.js","components/MoviesDetails/MoviesDetails.styled.js","components/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a777d591b15a4fcb1951681e4c73cdf';\n\nexport const fetchMovieByTrending = async () => {\n  const respounse = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return respounse;\n};\n\nexport const fetchMovieByName = async name => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`\n  );\n  return respounce;\n};\n\nexport const fetchMovieById = async id => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n  return respounce;\n};\n\nexport const fetchMovieCast = async id => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return respounce;\n};\n\nexport const fetchMovieReviews = async id => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return respounce;\n};\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesWrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const MoviesInput = styled.input`\n  margin-right: 20px;\n`;\n\nexport const MoviesButton = styled.button`\n  cursor: pointer;\n  :hover {\n    background-color: darkgrey;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MoviesNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n\n  :hover {\n    background-color: darkgrey;\n    color: white;\n  }\n`;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesDetailsMainWrapper = styled.div`\n  border-bottom: 2px solid black;\n`;\n\nexport const MoviesDetailsButton = styled(NavLink)`\n  display: block;\n  border: 1px solid transparency;\n  width: 80px;\n  text-align: center;\n  text-decoration: none;\n  color: black;\n  margin: 30px;\n  cursor: pointer;\n  :hover {\n    background-color: darkgrey;\n  }\n`;\n\nexport const MoviesDetailsWrapper = styled.div`\n  display: flex;\n  border-bottom: 2px solid black;\n`;\nexport const MoviesInformationBox = styled.div`\n  padding: 15px;\n`;\n\nexport const MoviesDetailsList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesDetailsGenres = styled.ul`\n  list-style: none;\n  margin-left: -40px;\n`;\n\nexport const MoviesAditionalInformation = styled.div`\n  padding: 15px;\n  border-bottom: 2px solid black;\n`;\n\nexport const MoviesAdditionalInformationList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesAdditionalInformationItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { fetchMovieById } from 'components/API/API';\nimport { MoviesNavLink } from 'components/Movies/Movies.styled';\nimport { useEffect, useState, Suspense, useRef } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport {\n  MoviesDetailsWrapper,\n  MoviesDetailsButton,\n  MoviesDetailsMainWrapper,\n  MoviesInformationBox,\n  MoviesDetailsList,\n  MoviesAditionalInformation,\n  MoviesAdditionalInformationList,\n  MoviesAdditionalInformationItem,\n  MoviesDetailsGenres,\n} from './MoviesDetails.styled';\n\nconst MoviesDetails = () => {\n  const params = useParams();\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(null);\n  const location = useLocation();\n  const nav = useRef(location);\n  const IMG_REGUEST = 'https://image.tmdb.org/t/p/w342';\n\n  useEffect(() => {\n    fetchMovieById(params.movieId)\n      .then(respounse => {\n        const movieInfo = respounse.data;\n        setMovie(movieInfo);\n      })\n      .catch(error => {\n        setError(error.message);\n      });\n  }, [params.movieId]);\n\n  return (\n    <MoviesDetailsMainWrapper>\n      <MoviesDetailsButton to={nav.current.state?.from ?? '/movies'}>\n        Go Back!\n      </MoviesDetailsButton>\n      {error && <h1>There is no detailed information about the film!!!</h1>}\n      {movie && (\n        <MoviesInformationBox>\n          <MoviesDetailsWrapper>\n            <div>\n              <img\n                src={IMG_REGUEST + movie.poster_path}\n                alt={movie.title || movie.name}\n              />\n            </div>\n            <div>\n              <MoviesDetailsList>\n                <li>\n                  <h2>{movie.title || movie.name}</h2>\n                  <p>User score {(movie.vote_average * 10).toFixed()} %</p>\n                </li>\n                <li>\n                  <h2>Overview</h2>\n                  <p>{movie.overview}</p>\n                </li>\n                <li>\n                  <h2>Genres</h2>\n                  <MoviesDetailsGenres>\n                    {movie.genres.map(genre => {\n                      return <li key={genre.id}>{genre.name}</li>;\n                    })}\n                  </MoviesDetailsGenres>\n                </li>\n              </MoviesDetailsList>\n            </div>\n          </MoviesDetailsWrapper>\n          <MoviesAditionalInformation>\n            <h3>Additional information</h3>\n            <MoviesAdditionalInformationList>\n              <MoviesAdditionalInformationItem>\n                <MoviesNavLink to={'cast'}>Cast</MoviesNavLink>\n              </MoviesAdditionalInformationItem>\n              <MoviesAdditionalInformationItem>\n                <MoviesNavLink to={'reviews'}>Reviews</MoviesNavLink>\n              </MoviesAdditionalInformationItem>\n            </MoviesAdditionalInformationList>\n          </MoviesAditionalInformation>\n        </MoviesInformationBox>\n      )}\n\n      <Suspense fallback={null}>\n        <Outlet />\n      </Suspense>\n    </MoviesDetailsMainWrapper>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["API_KEY","fetchMovieByTrending","axios","respounse","fetchMovieByName","name","respounce","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","MoviesWrapper","styled","MoviesInput","MoviesButton","MovieList","MoviesItem","MoviesNavLink","NavLink","MoviesDetailsMainWrapper","MoviesDetailsButton","MoviesDetailsWrapper","MoviesInformationBox","MoviesDetailsList","MoviesDetailsGenres","MoviesAditionalInformation","MoviesAdditionalInformationList","MoviesAdditionalInformationItem","params","useParams","useState","movie","setMovie","error","setError","location","useLocation","nav","useRef","useEffect","movieId","then","movieInfo","data","catch","message","to","current","state","from","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","Suspense","fallback"],"sourceRoot":""}