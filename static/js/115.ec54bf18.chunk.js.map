{"version":3,"file":"static/js/115.ec54bf18.chunk.js","mappings":"8SAEMA,EAAU,mCAEHC,EAAoB,mCAAG,oGACVC,EAAAA,GAAAA,IAAA,gEACmCF,IAFzB,cAC5BG,EAD4B,yBAI3BA,GAJ2B,2CAAH,qDAOpBC,EAAgB,mCAAG,WAAMC,GAAN,uFACNH,EAAAA,GAAAA,IAAA,4DAC+BF,EAD/B,kBACgDK,IAF1C,cACxBC,EADwB,yBAIvBA,GAJuB,2CAAH,sDAOhBC,EAAc,mCAAG,WAAMC,GAAN,uFACJN,EAAAA,GAAAA,IAAA,6CACgBM,EADhB,oBAC8BR,IAF1B,cACtBM,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdG,EAAc,mCAAG,WAAMD,GAAN,uFACJN,EAAAA,GAAAA,IAAA,6CACgBM,EADhB,4BACsCR,IAFlC,cACtBM,EADsB,yBAIrBA,GAJqB,2CAAH,sDAOdI,EAAiB,mCAAG,WAAMF,GAAN,uFACPN,EAAAA,GAAAA,IAAA,6CACgBM,EADhB,4BACsCR,IAF/B,cACzBM,EADyB,yBAIxBA,GAJwB,2CAAH,qD,gGCkC9B,UAtDe,WACb,OAA4BK,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAeF,EAAaG,IAAI,SAChCC,GAAWC,EAAAA,EAAAA,MAsBjB,OAdAC,EAAAA,EAAAA,YAAU,WACHJ,IAGLJ,EAAS,OACTX,EAAAA,EAAAA,IAAiBe,GAAcK,MAAK,SAAArB,GACG,IAAjCA,EAAUsB,KAAKC,eACjBX,EAAS,iDAEX,IAAMY,EAASxB,EAAUsB,KAAKG,QAC9Bf,EAAUc,EACX,IACF,GAAE,CAACR,KAGF,UAAC,KAAD,YACE,0DACA,kBAAMU,SAvBW,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAQF,EAAIG,OAAO5B,KAAK2B,MAC9Bd,EAAgB,CAAEgB,MAAOF,GAC1B,EAmBG,WACE,SAAC,KAAD,CAAaG,KAAK,OAAO9B,KAAK,UAC9B,SAAC,KAAD,CAAc8B,KAAK,SAAnB,wBAEF,2BACGrB,IAAS,wBAAKA,IACdF,IACC,SAAC,KAAD,UACGA,EAAOwB,KAAI,SAAAC,GACV,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAeC,GAAE,UAAKD,EAAM7B,IAAM+B,MAAO,CAAEC,KAAMnB,GAAjD,SACGgB,EAAMI,OAASJ,EAAMhC,QAFTgC,EAAM7B,GAM1B,WAMZ,C,0NC7DYkC,EAAgBC,EAAAA,GAAAA,IAAH,0CAIbC,EAAcD,EAAAA,GAAAA,MAAH,+CAIXE,EAAeF,EAAAA,GAAAA,OAAH,8FAOZG,EAAYH,EAAAA,GAAAA,GAAH,6CAITI,EAAaJ,EAAAA,GAAAA,GAAH,8EAMVK,GAAgBL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAH,yI","sources":["components/API/API.js","components/Movies/Movies.jsx","components/Movies/Movies.styled.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '9a777d591b15a4fcb1951681e4c73cdf';\n\nexport const fetchMovieByTrending = async () => {\n  const respounse = await axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API_KEY}`\n  );\n  return respounse;\n};\n\nexport const fetchMovieByName = async name => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${name}`\n  );\n  return respounce;\n};\n\nexport const fetchMovieById = async id => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`\n  );\n  return respounce;\n};\n\nexport const fetchMovieCast = async id => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`\n  );\n  return respounce;\n};\n\nexport const fetchMovieReviews = async id => {\n  const respounce = await axios.get(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`\n  );\n  return respounce;\n};\n","import { fetchMovieByName } from 'components/API/API';\nimport { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport {\n  MoviesWrapper,\n  MoviesInput,\n  MoviesButton,\n  MovieList,\n  MoviesItem,\n  MoviesNavLink,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const currentValue = searchParams.get('query');\n  const location = useLocation();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const value = evt.target.name.value;\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    if (!currentValue) {\n      return;\n    }\n    setError(null);\n    fetchMovieByName(currentValue).then(respounse => {\n      if (respounse.data.total_results === 0) {\n        setError('Nothing was found according to your request!!');\n      }\n      const result = respounse.data.results;\n      setMovies(result);\n    });\n  }, [currentValue]);\n\n  return (\n    <MoviesWrapper>\n      <h1>Enter the name of the movie!</h1>\n      <form onSubmit={handleSubmit}>\n        <MoviesInput type=\"text\" name=\"name\" />\n        <MoviesButton type=\"submit\">Search</MoviesButton>\n      </form>\n      <div>\n        {error && <h2>{error}</h2>}\n        {movies && (\n          <MovieList>\n            {movies.map(movie => {\n              return (\n                <MoviesItem key={movie.id}>\n                  <MoviesNavLink to={`${movie.id}`} state={{ from: location }}>\n                    {movie.title || movie.name}\n                  </MoviesNavLink>\n                </MoviesItem>\n              );\n            })}\n          </MovieList>\n        )}\n      </div>\n    </MoviesWrapper>\n  );\n};\n\nexport default Movies;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MoviesWrapper = styled.div`\n  padding: 15px;\n`;\n\nexport const MoviesInput = styled.input`\n  margin-right: 20px;\n`;\n\nexport const MoviesButton = styled.button`\n  cursor: pointer;\n  :hover {\n    background-color: darkgrey;\n  }\n`;\n\nexport const MovieList = styled.ul`\n  list-style: none;\n`;\n\nexport const MoviesItem = styled.li`\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const MoviesNavLink = styled(NavLink)`\n  text-decoration: none;\n  color: black;\n\n  :hover {\n    background-color: darkgrey;\n    color: white;\n  }\n`;\n"],"names":["API_KEY","fetchMovieByTrending","axios","respounse","fetchMovieByName","name","respounce","fetchMovieById","id","fetchMovieCast","fetchMovieReviews","useState","movies","setMovies","error","setError","useSearchParams","searchParams","setSearchParams","currentValue","get","location","useLocation","useEffect","then","data","total_results","result","results","onSubmit","evt","preventDefault","value","target","query","type","map","movie","to","state","from","title","MoviesWrapper","styled","MoviesInput","MoviesButton","MovieList","MoviesItem","MoviesNavLink","NavLink"],"sourceRoot":""}